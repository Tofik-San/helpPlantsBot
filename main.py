import os
import json
import logging
from fastapi import FastAPI, Request
from telegram import Bot, ReplyKeyboardMarkup
from service import get_plant_data, format_plant_info

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TELEGRAM_TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TELEGRAM_TOKEN)

info_keyboard = ReplyKeyboardMarkup(
    keyboard=[["‚ÑπÔ∏è –ò–Ω—Ñ–æ"]],
    resize_keyboard=True,
    one_time_keyboard=False
)

app = FastAPI()

@app.post("/webhook")
async def telegram_webhook(request: Request):
    try:
        data = await request.json()
        logger.info(f"üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {data}")

        message = data.get("message", {})
        chat_id = message.get("chat", {}).get("id")
        text = message.get("text", "").strip()

        if not text or not chat_id:
            return {"status": "ignored"}

        logger.info(f"üó£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {chat_id} ‚Üí {text}")

        if text.lower() in ["–∏–Ω—Ñ–æ", "‚ÑπÔ∏è –∏–Ω—Ñ–æ"]:
            bot.send_message(
                chat_id=chat_id,
                text="""üå± –¢—ã–∫–∞–µ—à—å –≤ —Ñ–æ—Ç–∫–∏, –≥–∞–¥–∞–µ—à—å –ø–æ –ª–∏—Å—Ç—å—è–º? –•–≤–∞—Ç–∏—Ç. –ü—Ä–æ—Å—Ç–æ –Ω–∞–ø–∏—à–∏ –Ω–∞–∑–≤–∞–Ω–∏–µ ‚Äî –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –≤—Å—ë:

‚Ä¢ –∫–∞–∫ –ø–æ–ª–∏–≤–∞—Ç—å, –∫–æ–≥–¥–∞ –æ–±—Ä–µ–∑–∞—Ç—å
‚Ä¢ –≥–¥–µ —Å–∞–∂–∞—Ç—å, –∫–∞–∫ –Ω–µ —É–≥—Ä–æ–±–∏—Ç—å
‚Ä¢ —Ñ–æ—Ç–æ, –ª–∞–π—Ñ—Ö–∞–∫–∏, –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã

‚ö° –ë—ã—Å—Ç—Ä–æ. –ë–µ–∑ —Ç—É–ø—ã—Ö —Ñ–æ—Ä–º, —Ä–µ–∫–ª–∞–º—ã –∏ –ª–æ–≥–∏–Ω–æ–≤.
–û–¥–∏–Ω –±–æ—Ç ‚Äî –≤–µ—Å—å –∫–∞—Ç–∞–ª–æ–≥ —É —Ç–µ–±—è –≤ —á–∞—Ç–µ.

üß† –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ:
‚Ä¢ –ø–æ–¥–±–æ—Ä —Ä–∞—Å—Ç–µ–Ω–∏–π –ø–æ–¥ –∏–Ω—Ç–µ—Ä—å–µ—Ä –∏ –∫–ª–∏–º–∞—Ç
‚Ä¢ —ç–∫—Å–ø–æ—Ä—Ç –≤ Excel –∏ PDF
‚Ä¢ –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏—è –ø–æ–¥ –±—Ä–µ–Ω–¥, —Å–∞–π—Ç –∏–ª–∏ —Å–æ—Ü—Å–µ—Ç—å
‚Ä¢ –ø–æ–¥–ø–∏—Å–∫–∞ –¥–ª—è –ø–∏—Ç–æ–º–Ω–∏–∫–æ–≤ –∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤

üè™ –£ –≤–∞—Å —Å–≤–æ–π –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç?
–ë–æ—Ç –ª–µ–≥–∫–æ –∞–¥–∞–ø—Ç–∏—Ä—É–µ—Ç—Å—è –ø–æ–¥ –±–∞–∑—É –º–∞–≥–∞–∑–∏–Ω–∞ –∏–ª–∏ –ø–∏—Ç–æ–º–Ω–∏–∫–∞:
–Ω–∞–∑–≤–∞–Ω–∏—è, –æ–ø–∏—Å–∞–Ω–∏—è, —Ü–µ–Ω—ã, —Ñ–æ—Ç–æ ‚Äî –≤—Å—ë –º–æ–∂–Ω–æ –≤—Å—Ç—Ä–æ–∏—Ç—å.

üéØ –î—Ä—É–≥–∞—è –Ω–∏—à–∞?
–û—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π –¥–æ —Ä–µ–º–æ–Ω—Ç–∞, –æ—Ç —Ñ–∏—Ç–Ω–µ—Å–∞ –¥–æ —Ñ–∏–Ω—Ç–µ—Ö–∞ ‚Äî
—Å–¥–µ–ª–∞–µ–º —á–∞—Ç-–±–æ—Ç–∞ –ø–æ–¥ –ª—é–±–æ–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ –∏–ª–∏ –±–∏–∑–Ω–µ—Å-–∑–∞–¥–∞—á—É.

üõ†Ô∏è –ò—Å–ø–æ–ª—å–∑—É–µ–º—ã–π —Å—Ç–µ–∫:
Python ¬∑ FastAPI ¬∑ Telegram Bot API ¬∑ Docker ¬∑ Railway ¬∑ OpenAI API ¬∑ Prompt Engineering

ü§ñ –í–æ–∑–º–æ–∂–Ω–∞ –∏–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è GPT‚Äë4o ‚Äî
–Ω–æ–≤–µ–π—à–µ–π –≤–µ—Ä—Å–∏–∏ —Å –ø–æ–¥–¥–µ—Ä–∂–∫–æ–π —Ç–µ–∫—Å—Ç–∞, –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–π –∏ –ª–æ–≥–∏–∫–∏.
–ú–æ–∂–µ—Ç –±–æ–ª—å—à–µ, –æ—Ç–≤–µ—á–∞–µ—Ç —É–º–Ω–µ–µ, –æ–±—É—á–∞–µ—Ç—Å—è –Ω–∞ –≤–∞—à–∏—Ö –¥–∞–Ω–Ω—ã—Ö.

üöÄ –ë–æ—Ç ‚Äî —á–∞—Å—Ç—å –±–æ–ª—å—à–æ–≥–æ –ø—Ä–æ–µ–∫—Ç–∞ –ø–æ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏–∏ —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.
–ü—Ä–æ–≤–µ—Ä—è–π, —Ç–µ—Å—Ç–∏—Ä—É–π, –¥–µ–ª–∏—Å—å ‚Äî –∏–ª–∏ –∑–∞–∫–∞–∑—ã–≤–∞–π —Å–≤–æ–µ–≥–æ.

üì© –°–≤—è–∑—å –∏ –∑–∞–∫–∞–∑: @veryhappyEpta""",
                reply_markup=info_keyboard
            )
            return {"status": "ok"}

        plant = get_plant_data(text)

        if plant:
            reply = format_plant_info(plant)

            image_path = f"images/{plant.get('image')}"
            if plant.get("image") and os.path.exists(image_path):
                with open(image_path, "rb") as image:
                    bot.send_photo(chat_id=chat_id, photo=image, caption=reply, parse_mode="HTML", reply_markup=info_keyboard)
            else:
                bot.send_message(chat_id=chat_id, text=reply, parse_mode="HTML", reply_markup=info_keyboard)
        else:
            bot.send_message(chat_id=chat_id, text="‚ùó –†–∞—Å—Ç–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.", reply_markup=info_keyboard)
    except Exception as e:
        logger.error("‚ùå –û—à–∏–±–∫–∞ –≤ –æ–±—Ä–∞–±–æ—Ç–∫–µ —Å–æ–æ–±—â–µ–Ω–∏—è", exc_info=e)

    return {"status": "ok"}


if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=8080)
