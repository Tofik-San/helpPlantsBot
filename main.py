import logging
import os
from fastapi import FastAPI, Request
from fastapi.responses import JSONResponse
from telegram import (
    Bot, Update, InlineKeyboardButton, InlineKeyboardMarkup,
    ReplyKeyboardMarkup, KeyboardButton
)
from service import get_plant_data, get_bot_info

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

TOKEN = os.getenv("BOT_TOKEN")
bot = Bot(token=TOKEN)
app = FastAPI()

# –ü–æ—Å—Ç–æ—è–Ω–Ω–∞—è –∫–ª–∞–≤–∏–∞—Ç—É—Ä–∞ (–∏—Å–ø—Ä–∞–≤–ª–µ–Ω–æ –ø–æ–¥ —Ç–≤–æ–∏ –ø–æ–∂–µ–ª–∞–Ω–∏—è)
def get_persistent_keyboard():
    keyboard = [
        [KeyboardButton("üîÑ –†–µ—Å—Ç–∞—Ä—Ç"), KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ"), KeyboardButton("üì¢ –ö–∞–Ω–∞–ª")],
        [KeyboardButton("‚ùì Help")]
    ]
    return ReplyKeyboardMarkup(keyboard, resize_keyboard=True)

# Inline –∫–∞—Ç–µ–≥–æ—Ä–∏–∏
def get_category_inline_keyboard():
    keyboard = [
        [InlineKeyboardButton("ü™¥ –°—É–∫–∫—É–ª–µ–Ω—Ç—ã", callback_data="category_–°—É–∫–∫—É–ª–µ–Ω—Ç—ã")],
        [InlineKeyboardButton("üåø –ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ –∑–µ–ª—ë–Ω—ã–µ", callback_data="category_–ù–µ–ø—Ä–∏—Ö–æ—Ç–ª–∏–≤—ã–µ –∑–µ–ª—ë–Ω—ã–µ")],
        [InlineKeyboardButton("üå∏ –¶–≤–µ—Ç—É—â–∏–µ", callback_data="category_–¶–≤–µ—Ç—É—â–∏–µ")],
        [InlineKeyboardButton("üå± –õ–∏–∞–Ω—ã", callback_data="category_–õ–∏–∞–Ω—ã")]
    ]
    return InlineKeyboardMarkup(keyboard)

# –°—Ç–∞—Ä—Ç
def start(update):
    bot.send_message(
        chat_id=update.message.chat.id,
        text="üåø –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é –Ω–∏–∂–µ –∏–ª–∏ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É –¥–ª—è –Ω–∞–≤–∏–≥–∞—Ü–∏–∏:",
        reply_markup=get_persistent_keyboard()
    )
    bot.send_message(
        chat_id=update.message.chat.id,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é:",
        reply_markup=get_category_inline_keyboard()
    )

# –û–±—Ä–∞–±–æ—Ç–∫–∞ –∫–Ω–æ–ø–æ–∫
def handle_static_buttons(update):
    text = update.message.text.strip()
    if text == "üîÑ –†–µ—Å—Ç–∞—Ä—Ç":
        start(update)
    elif text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
        bot.send_message(
            chat_id=update.message.chat.id,
            text="""üåø –û –ø—Ä–æ–µ–∫—Ç–µ BOTanik

–≠—Ç–æ—Ç –±–æ—Ç –∑–∞–¥—É–º—ã–≤–∞–ª—Å—è –∫–∞–∫ —É–¥–æ–±–Ω—ã–π –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏ –∏ –∏–∑—É—á–µ–Ω–∏—è –±–æ—Ç–∞–Ω–∏–∫–∏, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –∫–∞—Ç–∞–ª–æ–≥ —Ä–∞—Å—Ç–µ–Ω–∏–π, —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é —Ä—É—Ç–∏–Ω–Ω—ã—Ö –∑–∞–¥–∞—á.

–ü—Ä–æ–µ–∫—Ç —Å–æ–∑–¥–∞—ë—Ç—Å—è —Å –ø—Ä–∏—Ü–µ–ª–æ–º –Ω–∞ –ø–∏—Ç–æ–º–Ω–∏–∫–∏, –º–∞–≥–∞–∑–∏–Ω—ã —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —á–∞—Å—Ç–Ω—ã—Ö —ç–Ω—Ç—É–∑–∏–∞—Å—Ç–æ–≤, –∫–æ—Ç–æ—Ä—ã–µ —Ö–æ—Ç—è—Ç –ø—Ä–æ—Å—Ç–æ –∏ –±—ã—Å—Ç—Ä–æ –ø–æ–ª—É—á–∞—Ç—å —Å–ø—Ä–∞–≤–æ—á–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞—Å—Ç–µ–Ω–∏—è—Ö –∏ —Å–ª–µ–¥–∏—Ç—å –∑–∞ –∏—Ö —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º.

üõ†Ô∏è –¢–µ—Ö–Ω–∏—á–µ—Å–∫–∞—è —Å–æ—Å—Ç–∞–≤–ª—è—é—â–∞—è:
‚Äì Telegram Bot API –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ —á–µ—Ä–µ–∑ –º–µ—Å—Å–µ–Ω–¥–∂–µ—Ä.
‚Äì Python + FastAPI –¥–ª—è —Å—Ç–∞–±–∏–ª—å–Ω–æ–π –∏ –±—ã—Å—Ç—Ä–æ–π —Ä–∞–±–æ—Ç—ã.
‚Äì PostgreSQL –¥–ª—è —Ö—Ä–∞–Ω–µ–Ω–∏—è –±–∞–∑—ã —Ä–∞—Å—Ç–µ–Ω–∏–π —Å –≤–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å—é —Ä–∞—Å—à–∏—Ä–µ–Ω–∏—è.
‚Äì –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è —Å –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–º–∏ –±–æ—Ç–∞–º–∏ (—Ö–µ–ª–ø–µ—Ä –∏ –ø–æ—Å—Ç–µ—Ä) –¥–ª—è –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –∏ –∞–≤—Ç–æ–æ–±–Ω–æ–≤–ª–µ–Ω–∏–π.
‚Äì –ì–∏–±–∫–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞, –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –¥–æ–±–∞–≤–ª—è—Ç—å GPT –¥–ª—è —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π, —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏–π –ø–æ —Ñ–æ—Ç–æ, —Ç—Ä–µ–∫–∏–Ω–≥ —Å–æ—Å—Ç–æ—è–Ω–∏—è —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –Ω–∞—Å—Ç—Ä–æ–π–∫—É —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–π.

üöÄ –ü–µ—Ä—Å–ø–µ–∫—Ç–∏–≤—ã —Ä–∞–∑–≤–∏—Ç–∏—è:
‚úÖ –ü–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∞–∑—ã —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ —Å–æ—Ä—Ç–æ–≤.
‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è GPT –¥–ª—è –ø–µ—Ä—Å–æ–Ω–∞–ª—å–Ω—ã—Ö —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–π –ø–æ —É—Ö–æ–¥—É.
‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏–π –∏ –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –±–æ–ª–µ–∑–Ω–µ–π –ø–æ —Ñ–æ—Ç–æ.
‚úÖ –°–æ–∑–¥–∞–Ω–∏–µ –º–∞—Ä–∫–µ—Ç–ø–ª–µ–π—Å–∞ –¥–ª—è –∑–∞–∫–∞–∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π –Ω–∞–ø—Ä—è–º—É—é —á–µ—Ä–µ–∑ –±–æ—Ç.
‚úÖ –í–æ–∑–º–æ–∂–Ω–æ—Å—Ç—å –∫–∞—Å—Ç–æ–º–∏–∑–∞—Ü–∏–∏ –ø–æ–¥ –±—Ä–µ–Ω–¥ –ø–∏—Ç–æ–º–Ω–∏–∫–æ–≤ –∏ –º–∞–≥–∞–∑–∏–Ω–æ–≤.

üìö –ö–æ–º—É –ø–æ–¥—Ö–æ–¥–∏—Ç BOTanik:
‚Äì –ü–∏—Ç–æ–º–Ω–∏–∫–∞–º –∏ –º–∞–≥–∞–∑–∏–Ω–∞–º –¥–ª—è –æ–±—Å–ª—É–∂–∏–≤–∞–Ω–∏—è –∫–ª–∏–µ–Ω—Ç–æ–≤ –∏ –≤–µ–¥–µ–Ω–∏—è –∫–∞—Ç–∞–ª–æ–≥–∞.
‚Äì –°—Ç—É–¥–µ–Ω—Ç–∞–º –∏ –ø—Ä–µ–ø–æ–¥–∞–≤–∞—Ç–µ–ª—è–º –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.
‚Äì –í–ª–∞–¥–µ–ª—å—Ü–∞–º –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π –¥–ª—è —É–¥–æ–±–Ω–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º –∏ –ø–ª–∞–Ω—É —É—Ö–æ–¥–∞.
‚Äì –õ–∞–Ω–¥—à–∞—Ñ—Ç–Ω—ã–º –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º –∫–∞–∫ –±–∞–∑–∞ –ø–æ–¥–±–æ—Ä–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π.

üí° –ß–µ–º –ø–æ–ª–µ–∑–µ–Ω:
‚Äì –°–æ–∫—Ä–∞—â–∞–µ—Ç –≤—Ä–µ–º—è –ø–æ–∏—Å–∫–∞ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å—Ç–µ–Ω–∏—è—Ö.
‚Äì –£—á–∏—Ç –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º—É —É—Ö–æ–¥—É.
‚Äì –î–∞–µ—Ç –±—ã—Å—Ç—Ä—ã–π –¥–æ—Å—Ç—É–ø –∫ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –≤ –æ–¥–Ω–æ–º –º–µ—Å—Ç–µ.
‚Äì –ú–æ–∂–µ—Ç —Å—Ç–∞—Ç—å —Ç–æ—á–∫–æ–π –≤—Ö–æ–¥–∞ –¥–ª—è —Ä–∞–∑–≤–∏—Ç–∏—è –ø–∏—Ç–æ–º–Ω–∏–∫–∞ –≤ —Ü–∏—Ñ—Ä–æ–≤–æ–º —Ñ–æ—Ä–º–∞—Ç–µ.

üì¢ –ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞: https://t.me/BOTanik_Channel
–°–≤—è–∑—å –ø–æ —Å–æ—Ç—Ä—É–¥–Ω–∏—á–µ—Å—Ç–≤—É: @veryhappyEpta
""",
            reply_markup=get_persistent_keyboard()
        )
    elif text == "üì¢ –ö–∞–Ω–∞–ª":
        bot.send_message(
            chat_id=update.message.chat.id,
            text="https://t.me/BOTanik_Channel",
            reply_markup=get_persistent_keyboard()
        )
    elif text == "‚ùì Help":
        bot.send_message(
            chat_id=update.message.chat.id,
            text="""‚ùì Help: –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º BOTanik

üëã –ö–∞–∫ —Ä–∞–±–æ—Ç–∞–µ—Ç –±–æ—Ç:
‚Äì –í—ã–±–µ—Ä–∏—Ç–µ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å —Ñ–æ—Ç–æ –∏ —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —É—Ö–æ–¥—É.
‚Äì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ –≤–Ω–∏–∑—É —ç–∫—Ä–∞–Ω–∞ –¥–ª—è –±—ã—Å—Ç—Ä–æ–≥–æ –¥–æ—Å—Ç—É–ø–∞ –∫ —Ñ—É–Ω–∫—Ü–∏—è–º.
‚Äì –î–ª—è –æ–∑–Ω–∞–∫–æ–º–ª–µ–Ω–∏—è –ø—Ä–æ–µ–∫—Ç–∞ –∫–Ω–æ–ø–∫–∞ "–û –ø—Ä–æ–µ–∫—Ç–µ".
‚Äì –î–ª—è –ø–µ—Ä–µ—Ö–æ–¥–∞ –Ω–∞ –∫–∞–Ω–∞–ª –∫–Ω–æ–ø–∫–∞ "–ö–∞–Ω–∞–ª" –∏–ª–∏ –Ω–∏–∂–µ –ø–æ —Å—Å—ã–ª–∫–µ.
‚Äì –ö–Ω–æ–ø–∫–∞ "–†–µ—Å—Ç–∞—Ä—Ç" —á—Ç–æ–±—ã –ø–µ—Ä–µ–π—Ç–∏ –∫ –≤—ã–±–æ—Ä—É –∫–∞—Ç–µ–≥–æ—Ä–∏–∏.

ü™¥ –ß—Ç–æ –±–æ—Ç —É–º–µ–µ—Ç:
‚úÖ –í—ã–¥–∞—á–∞ –∫—Ä–∞—Ç–∫–æ–π –∫–∞—Ä—Ç–æ—á–∫–∏ —Å —Ñ–æ—Ç–æ, –æ–ø–∏—Å–∞–Ω–∏–µ–º –∏ —Å–æ–≤–µ—Ç–∞–º–∏ –ø–æ —É—Ö–æ–¥—É.
‚úÖ –ü–æ—à–∞–≥–æ–≤—ã–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏–∏ –∏ —Å–æ–≤–µ—Ç—ã –ø–æ –∫–∞—Ç–µ–≥–æ—Ä–∏—è–º.

üìú –ü–æ–ª–∏—Ç–∏–∫–∞ –±–æ—Ç–∞:
‚Äì –ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–Ω—ã–π –∏ –ø—Ä–µ–¥–Ω–∞–∑–Ω–∞—á–µ–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—Ö–æ–¥–µ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.
‚Äì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –Ω–æ—Å–∏—Ç —Å–ø—Ä–∞–≤–æ—á–Ω—ã–π —Ö–∞—Ä–∞–∫—Ç–µ—Ä –∏ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ (–ü–û–ö–ê –ß–¢–û).
‚Äì –£–≤–∞–∂–∞–π—Ç–µ —Ä–∞–±–æ—Ç—É –∞–≤—Ç–æ—Ä–∞, –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–π—Ç–µ –±–æ—Ç –¥–ª—è —Å–ø–∞–º–∞. –°–æ–≤–µ—Ç—ã –∏ –∫–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤–Ω–∞—è –∫—Ä–∏—Ç–∏–∫–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è.

üîî –†–∞—Å—Ç–µ–Ω–∏—è, –≥–∞–π–¥—ã –∏ —Å—Ç–∞—Ç—å–∏ –¥–æ–±–∞–≤–ª—è—é—Ç—Å—è –ø–æ—Å—Ç–µ–ø–µ–Ω–Ω–æ –∏ —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è, –ø–æ–¥–ø–∏—à–∏—Å—å –Ω–∞ –Ω–∞—à –∫–∞–Ω–∞–ª:
https://t.me/BOTanik_Channel

–ï—Å—Ç—å –≤–æ–ø—Ä–æ—Å—ã –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? –ü–∏—à–∏: @veryhappyEpta
""",
            reply_markup=get_persistent_keyboard()
        )
    else:
        handle_message(update)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ —Å–æ–æ–±—â–µ–Ω–∏–π
def handle_message(update):
    text = update.message.text.strip()
    plant_list = get_plant_data(name=text)
    if plant_list:
        plant = plant_list[0]
        photo_url = f"https://tofik-san.github.io/helpPlantsBot/images/{plant['image']}"
        caption = f"<b>{plant['name']}</b>\n{plant['short_description']}"
        keyboard = [[InlineKeyboardButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=f"details_{plant['id']}")]]
        reply_markup = InlineKeyboardMarkup(keyboard)
        bot.send_photo(
            chat_id=update.effective_chat.id,
            photo=photo_url,
            caption=caption,
            reply_markup=reply_markup,
            parse_mode="HTML"
        )
    else:
        start(update)

# –û–±—Ä–∞–±–æ—Ç–∫–∞ inline –∫–Ω–æ–ø–æ–∫
def button_callback(update):
    query = update.callback_query
    query.answer()
    data = query.data

    if data.startswith("category_"):
        category = data.split("_", 1)[1]
        plants = get_plant_data(category_filter=category)
        if plants:
            keyboard = [[InlineKeyboardButton(plant['name'], callback_data=f"plant_{plant['id']}")] for plant in plants]
            reply_markup = InlineKeyboardMarkup(keyboard)
            bot.send_message(chat_id=query.message.chat.id, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ:", reply_markup=reply_markup)
        else:
            bot.send_message(chat_id=query.message.chat.id, text="–í —ç—Ç–æ–π –∫–∞—Ç–µ–≥–æ—Ä–∏–∏ –ø–æ–∫–∞ –Ω–µ—Ç —Ä–∞—Å—Ç–µ–Ω–∏–π.", reply_markup=get_persistent_keyboard())

    elif data.startswith("plant_"):
        plant_id = int(data.split("_")[1])
        plant_list = get_plant_data(id_filter=plant_id)
        if plant_list:
            plant = plant_list[0]
            photo_url = f"https://tofik-san.github.io/helpPlantsBot/images/{plant['image']}"
            caption = f"<b>{plant['name']}</b>\n{plant['short_description']}"
            keyboard = [[InlineKeyboardButton("üìñ –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data=f"details_{plant['id']}")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            bot.send_photo(chat_id=query.message.chat.id, photo=photo_url, caption=caption, reply_markup=reply_markup, parse_mode="HTML")
        else:
            bot.send_message(chat_id=query.message.chat.id, text="–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ —Ä–∞—Å—Ç–µ–Ω–∏–∏.", reply_markup=get_persistent_keyboard())

    elif data.startswith("details_"):
        plant_id = int(data.split("_")[1])
        plant_list = get_plant_data(id_filter=plant_id)
        if plant_list:
            plant = plant_list[0]
            detailed_info = (
                f"üåø <b>–¢–∏–ø:</b> {plant['category_type']}\n"
                f"‚òÄÔ∏è <b>–°–≤–µ—Ç:</b> {plant['light']}\n"
                f"üíß <b>–ü–æ–ª–∏–≤:</b> {plant['watering']}\n"
                f"üå°Ô∏è <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {plant['temperature']}\n"
                f"ü™¥ <b>–ü–æ—á–≤–∞:</b> {plant['soil']}\n"
                f"üåª <b>–£–¥–æ–±—Ä–µ–Ω–∏—è:</b> {plant['fertilizer']}\n"
                f"‚úÇÔ∏è <b>–£—Ö–æ–¥:</b> {plant['care_tip']}"
            )
            keyboard = [[InlineKeyboardButton("üìñ –°—Ç–∞—Ç—å—è", callback_data=f"insights_{plant['id']}")]]
            reply_markup = InlineKeyboardMarkup(keyboard)
            bot.send_message(chat_id=query.message.chat.id, text=detailed_info, parse_mode="HTML", reply_markup=reply_markup)
        else:
            bot.send_message(chat_id=query.message.chat.id, text="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –ø–æ–¥—Ä–æ–±–Ω—É—é –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é.", reply_markup=get_persistent_keyboard())

    elif data.startswith("insights_"):
        plant_id = int(data.split("_")[1])
        plant_list = get_plant_data(id_filter=plant_id)
        if plant_list:
            plant = plant_list[0]
            insights_text = plant['insights'].replace("\\n", "\n")
            bot.send_message(chat_id=query.message.chat.id, text=insights_text, reply_markup=get_persistent_keyboard())
        else:
            bot.send_message(chat_id=query.message.chat.id, text="–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å —Å—Ç–∞—Ç—å—é –¥–ª—è —ç—Ç–æ–≥–æ —Ä–∞—Å—Ç–µ–Ω–∏—è.", reply_markup=get_persistent_keyboard())

# Webhook
@app.post("/webhook")
async def webhook(request: Request):
    data = await request.json()
    update = Update.de_json(data, bot)
    if update.message:
        handle_static_buttons(update)
    elif update.callback_query:
        button_callback(update)
    return JSONResponse(content={"status": "ok"})

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=8080)
