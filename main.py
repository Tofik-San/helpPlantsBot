import os
import logging
import base64
import imghdr
from telegram import Update, ReplyKeyboardMarkup, KeyboardButton
from telegram.ext import Application, CommandHandler, MessageHandler, ContextTypes, filters
import httpx
from limit_checker import check_and_increment_limit

TOKEN = os.getenv("BOT_TOKEN")
PLANT_ID_API_KEY = os.getenv("PLANT_ID_API_KEY")

logging.basicConfig(level=logging.INFO)
logger = logging.getLogger(__name__)

application = Application.builder().token(TOKEN).build()

INFO_TEXT = """üìò –ö–∞–∫ –ø–æ–ª—å–∑–æ–≤–∞—Ç—å—Å—è –±–æ—Ç–æ–º GreenCore

üß≠ –ö–∞–∫ –æ—Ä–∏–µ–Ω—Ç–∏—Ä–æ–≤–∞—Ç—å—Å—è –≤ –æ—Ç–≤–µ—Ç–µ:

üì∏ –ü—Ä–∏—Å—ã–ª–∞–π—Ç–µ –æ–¥–Ω–æ —Ñ–æ—Ç–æ, –Ω–µ –∫–∞–∫ —Ñ–∞–π–ª, –∞ –∫–∞–∫ –∏–∑–æ–±—Ä–∞–∂–µ–Ω–∏–µ.
üìè –ú–∞–∫—Å–∏–º–∞–ª—å–Ω—ã–π —Ä–∞–∑–º–µ—Ä ‚Äî –¥–æ 5 –ú–ë, –∏–Ω–∞—á–µ –±–æ—Ç –Ω–µ —Å–º–æ–∂–µ—Ç –µ–≥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å.

üîç –ü–æ—Å–ª–µ —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è –±–æ—Ç –ø–æ–∫–∞–∂–µ—Ç –Ω–∞–∑–≤–∞–Ω–∏–µ –∏ —É—Ä–æ–≤–µ–Ω—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç–∏:
‚Äì üü¢ 85‚Äì100% ‚Äî —Å–æ–≤–ø–∞–¥–µ–Ω–∏–µ –ø–æ—á—Ç–∏ –Ω–∞–≤–µ—Ä–Ω—è–∫–∞
‚Äì üü° 60‚Äì84% ‚Äî –≤–æ–∑–º–æ–∂–Ω–æ, —Å—Ç–æ–∏—Ç –ø–µ—Ä–µ–ø—Ä–æ–≤–µ—Ä–∏—Ç—å
- üî¥ –º–µ–Ω–µ–µ 60% ‚Äî –ª—É—á—à–µ –æ—Ç–ø—Ä–∞–≤–∏—Ç—å –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ
üí° –ï—Å–ª–∏ —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å –Ω–∏–∑–∫–∞—è:
‚Äì –°—Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏—Ä—É–π—Ç–µ —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ–¥ –¥—Ä—É–≥–∏–º —É–≥–ª–æ–º
‚Äì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –µ—Å—Ç–µ—Å—Ç–≤–µ–Ω–Ω–æ–µ –æ—Å–≤–µ—â–µ–Ω–∏–µ
‚Äì –ò–∑–±–µ–≥–∞–π—Ç–µ –±–ª–∏–∫–æ–≤, —Ä–∞–∑–º—ã—Ç–æ—Å—Ç–∏ –∏ —Ç–µ–º–Ω–æ—Ç—ã

üì∑ –ß–µ–º —á–∏—â–µ —Ñ–æ—Ç–æ ‚Äî —Ç–µ–º —Ç–æ—á–Ω–µ–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç. –ù–µ –∂–º–∏, –Ω–µ –ø—Ä–∏–∫–ª–∞–¥—ã–≤–∞–π –Ω–µ—Å–∫–æ–ª—å–∫–æ —Å—Ä–∞–∑—É.


üëã –ß—Ç–æ –¥–µ–ª–∞–µ—Ç –±–æ—Ç:
‚Äì –û—Ç–ø—Ä–∞–≤—å—Ç–µ —Ñ–æ—Ç–æ —Ä–∞—Å—Ç–µ–Ω–∏—è ‚Äî –±–æ—Ç —Ä–∞—Å–ø–æ–∑–Ω–∞–µ—Ç –µ–≥–æ
‚Äì –ü–æ–ª—É—á—Ç–µ –∫–∞—Ä—Ç–æ—á–∫—É —É—Ö–æ–¥–∞: —Å–≤–µ—Ç, –ø–æ–ª–∏–≤, –ø–µ—Ä–µ—Å–∞–¥–∫–∞ –∏ –¥—Ä—É–≥–æ–µ
‚Äì –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –∫–Ω–æ–ø–∫–∏ —Å–Ω–∏–∑—É –¥–ª—è –¥–æ—Å—Ç—É–ø–∞ –∫ –∫–∞–Ω–∞–ª—É –∏–ª–∏ –æ–ø–∏—Å–∞–Ω–∏—é –ø—Ä–æ–µ–∫—Ç–∞

‚ùó –í–∞–∂–Ω–æ:
‚Äì –ö–Ω–æ–ø–∫–∞ ¬´–û –ø—Ä–æ–µ–∫—Ç–µ¬ª ‚Äî —Ä–∞—Å—Å–∫–∞–∂–µ—Ç –æ–± –∏–¥–µ–µ –∏ –±—É–¥—É—â–µ–º –±–æ—Ç–∞
‚Äì –ö–Ω–æ–ø–∫–∞ ¬´–ö–∞–Ω–∞–ª¬ª ‚Äî –¥–∞—ë—Ç –¥–æ—Å—Ç—É–ø –∫ –Ω–æ–≤–æ—Å—Ç—è–º –∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è–º
‚Äì –í –±–ª–∏–∂–∞–π—à–µ–º –æ–±–Ω–æ–≤–ª–µ–Ω–∏–∏ –ø–æ—è–≤–∏—Ç—Å—è: –∏—Å—Ç–æ—Ä–∏—è —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–π, –ø–æ–¥–±–æ—Ä –ø–æ —É—Å–ª–æ–≤–∏—è–º, –∏ –Ω–µ —Ç–æ–ª—å–∫–æ

ü™¥ –ß—Ç–æ –±–æ—Ç —É–∂–µ —É–º–µ–µ—Ç:
‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ç–æ
‚úÖ –î–∞–≤–∞—Ç—å —Å–æ–≤–µ—Ç—ã –ø–æ —É—Ö–æ–¥—É –Ω–∞ –æ—Å–Ω–æ–≤–µ –≤–Ω—É—Ç—Ä–µ–Ω–Ω–µ–π –±–∞–∑—ã
‚úÖ –ü–æ–∫–∞–∑—ã–≤–∞—Ç—å —É–≤–µ—Ä–µ–Ω–Ω–æ—Å—Ç—å —Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
‚úÖ –†–∞–±–æ—Ç–∞—Ç—å –±—ã—Å—Ç—Ä–æ –∏ –±–µ–∑ –ª–∏—à–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π

üìú –ü–æ–ª–∏—Ç–∏–∫–∞ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è:
‚Äì –ë–æ—Ç –±–µ—Å–ø–ª–∞—Ç–µ–Ω –∏ —Å–æ–∑–¥–∞–Ω –¥–ª—è –ø–æ–º–æ—â–∏ –≤ —É—Ö–æ–¥–µ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏
‚Äì –ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è —Å–ø—Ä–∞–≤–æ—á–Ω–∞—è –∏ –Ω–µ –∑–∞–º–µ–Ω—è–µ—Ç –∫–æ–Ω—Å—É–ª—å—Ç–∞—Ü–∏–∏ —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç–æ–≤ (–ø–æ–∫–∞ —á—Ç–æ)
‚Äì –£–≤–∞–∂–∞–π—Ç–µ —Ç—Ä—É–¥ –∞–≤—Ç–æ—Ä–∞. –ö–æ–Ω—Å—Ç—Ä—É–∫—Ç–∏–≤ –≤—Å–µ–≥–¥–∞ –ø—Ä–∏–≤–µ—Ç—Å—Ç–≤—É–µ—Ç—Å—è

üîî –û–±–Ω–æ–≤–ª–µ–Ω–∏—è –∏ –Ω–æ–≤—ã–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –ø–æ—è–≤–ª—è—é—Ç—Å—è —Ä–µ–≥—É–ª—è—Ä–Ω–æ ‚Äî –ø–æ–¥–ø–∏—à–∏—Ç–µ—Å—å –Ω–∞ –∫–∞–Ω–∞–ª, —á—Ç–æ–±—ã –Ω–µ –ø—Ä–æ–ø—É—Å—Ç–∏—Ç—å:
https://t.me/BOTanikPlants

üì¨ –ï—Å—Ç—å –∏–¥–µ–∏ –∏–ª–∏ –ø—Ä–µ–¥–ª–æ–∂–µ–Ω–∏—è? –ü–∏—à–∏: @veryhappyEpta"""

ABOUT_TEXT = """üåø –û –ø—Ä–æ–µ–∫—Ç–µ: GreenCore

–ò–∑–Ω–∞—á–∞–ª—å–Ω–æ –±–æ—Ç —Å–æ–∑–¥–∞–≤–∞–ª—Å—è –∫–∞–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç –¥–ª—è —Å–∏—Å—Ç–µ–º–Ω–æ–≥–æ —É—Ö–æ–¥–∞ –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏: —Å –∫–∞—Ç–∞–ª–æ–≥–æ–º, –ø–ª–∞–Ω–∏—Ä–æ–≤—â–∏–∫–æ–º –∏ –±–æ—Ç–∞–º–∏-–º–æ–¥–µ—Ä–∞—Ç–æ—Ä–∞–º–∏.
–¢–æ–≥–¥–∞ —ç—Ç–æ –±—ã–ª BOTanik ‚Äî –ø—Ä–æ–µ–∫—Ç, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∏–π –±–∞–∑—É —Ä–∞—Å—Ç–µ–Ω–∏–π, —Å–æ–≤–µ—Ç—ã –∏ –∞–≤—Ç–æ–º–∞—Ç–∏–∑–∞—Ü–∏—é.

–ù–æ –≤—Å—ë –±—ã—Å—Ç—Ä–æ —É–ø—ë—Ä–ª–æ—Å—å –≤ –ª–∏–º–∏—Ç—ã Telegram: –º–æ–∂–Ω–æ –±—ã–ª–æ —Å–¥–µ–ª–∞—Ç—å –∫—Ä–∞—Å–∏–≤–æ, –Ω–æ –≥–ª–∞–≤–Ω–∞—è –∑–∞–¥–∞—á–∞ –±—ã–ª–∞ –≤ –¥—Ä—É–≥–æ–º ‚Äî
–º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ –±—ã—Å—Ç—Ä–æ –∏ —Ç–æ—á–Ω–æ, –±–µ–∑ –ª–∏—à–Ω–∏—Ö –∫–ª–∞—Ü–∞–Ω–∏–π, –¥–∞—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é —Ç–æ, —á—Ç–æ –Ω—É–∂–Ω–æ.

üåÄ –°–µ–π—á–∞—Å –ª–æ–≥–∏–∫–∞ —Å—Ç–∞–ª–∞ –ø—Ä–µ–¥–µ–ª—å–Ω–æ —á—ë—Ç–∫–æ–π:
–§–æ—Ç–æ ‚Üí –ù–∞–∑–≤–∞–Ω–∏–µ ‚Üí –£—Ö–æ–¥
–ù–∏–∫–∞–∫–∏—Ö –ª–∏—à–Ω–∏—Ö –¥–µ–π—Å—Ç–≤–∏–π. –¢–æ–ª—å–∫–æ —Å—É—Ç—å.

üß† –ß—Ç–æ —É–º–µ–µ—Ç PROplants —Å–µ–≥–æ–¥–Ω—è:
‚Äì –û–ø—Ä–µ–¥–µ–ª—è–µ—Ç —Ä–∞—Å—Ç–µ–Ω–∏–µ –ø–æ —Ñ–æ—Ç–æ
‚Äì –í—ã–¥–∞—ë—Ç –∫–∞—Ä—Ç–æ—á–∫—É —Å —Ä–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏—è–º–∏ –ø–æ —É—Ö–æ–¥—É
‚Äì –†–∞–±–æ—Ç–∞–µ—Ç –ø—Ä—è–º–æ –≤ Telegram, –±–µ–∑ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏–π –∏ –ø–µ—Ä–µ—Ö–æ–¥–æ–≤

üõ†Ô∏è –¢–µ–∫—É—â–∏–π —Å—Ç–µ–∫:
‚Äì Python + FastAPI
‚Äì Telegram Bot API (webhook)
‚Äì httpx –¥–ª—è —Å–µ—Ç–µ–≤—ã—Ö –∑–∞–ø—Ä–æ—Å–æ–≤
‚Äì Plant.id API ‚Äî –¥–ª—è AI-—Ä–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏—è
‚Äì JSON / SQLite ‚Äî –±–∞–∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏–π

üöÄ –ë–ª–∏–∂–∞–π—à–∏–µ —à–∞–≥–∏:
‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–∏–µ –±–∞–∑—ã —Å–æ—Ä—Ç–æ–≤
‚úÖ –°–æ–≤–µ—Ç—ã –æ—Ç GPT –ø–æ –∫–æ–Ω—Ç–µ–∫—Å—Ç—É
‚úÖ –†–∞—Å–ø–æ–∑–Ω–∞–≤–∞–Ω–∏–µ –±–æ–ª–µ–∑–Ω–µ–π –∏ –≤—Ä–µ–¥–∏—Ç–µ–ª–µ–π
‚úÖ –ö–∞—Å—Ç–æ–º–Ω—ã–µ –≤–µ—Ä—Å–∏–∏ –¥–ª—è –ø–∏—Ç–æ–º–Ω–∏–∫–æ–≤
‚úÖ –ò–Ω—Ç–µ–≥—Ä–∞—Ü–∏—è –º–∏–Ω–∏-–º–∞—Ä–∫–µ—Ç–∞

üë• –ö–æ–º—É –ø–æ–¥–æ–π–¥—ë—Ç:
‚Äì –í–ª–∞–¥–µ–ª—å—Ü–∞–º –¥–æ–º–∞—à–Ω–∏—Ö —Ä–∞—Å—Ç–µ–Ω–∏–π
‚Äì –û–∑–µ–ª–µ–Ω–∏—Ç–µ–ª—è–º –∏ –¥–∏–∑–∞–π–Ω–µ—Ä–∞–º
‚Äì –ü–∏—Ç–æ–º–Ω–∏–∫–∞–º –∏ –º–∞–≥–∞–∑–∏–Ω–∞–º
‚Äì –í—Å–µ–º, –∫—Ç–æ —Ö–æ—á–µ—Ç —É—Ö–∞–∂–∏–≤–∞—Ç—å –ø—Ä–æ—â–µ, —Ç–æ—á–Ω–µ–µ –∏ –±—ã—Å—Ç—Ä–µ–µ

üí° –ü–æ—á–µ–º—É —ç—Ç–æ —É–¥–æ–±–Ω–æ:
‚Äì –ù–µ –Ω—É–∂–Ω–æ –∏—Å–∫–∞—Ç—å ‚Äî –±–æ—Ç —Å–∞–º –≤—Å—ë –ø–æ–∫–∞–∂–µ—Ç
‚Äì –†–∞–±–æ—Ç–∞–µ—Ç –±—ã—Å—Ç—Ä–æ –∏ —Å—Ç–∞–±–∏–ª—å–Ω–æ
‚Äì –ü–æ–¥—Ö–æ–¥–∏—Ç –∏ –Ω–æ–≤–∏—á–∫–∞–º, –∏ –æ–ø—ã—Ç–Ω—ã–º

üì¢ –ö–∞–Ω–∞–ª –ø—Ä–æ–µ–∫—Ç–∞: https://t.me/BOTanikPlants
üì¨ –°–≤—è–∑—å: @veryhappyEpta"""

CHANNEL_TEXT = "–ù–∞—à –∫–∞–Ω–∞–ª: https://t.me/BOTanikPlants"

async def start(update: Update, context: ContextTypes.DEFAULT_TYPE):
    keyboard = [[KeyboardButton("üìò –ò–Ω—Ñ–æ")],
                [KeyboardButton("üì¢ –ö–∞–Ω–∞–ª"), KeyboardButton("‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ")]]
    reply_markup = ReplyKeyboardMarkup(keyboard, resize_keyboard=True)
    await update.message.reply_text(
        "–ü—Ä–∏–≤–µ—Ç! –Ø BOTanik! –û—Ç–ø—Ä–∞–≤—å —Ñ–æ—Ç–æ, –∏ —è –ø–æ–ø—Ä–æ–±—É—é –æ–ø—Ä–µ–¥–µ–ª–∏—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ.",
        reply_markup=reply_markup,
    )

async def handle_photo(update: Update, context: ContextTypes.DEFAULT_TYPE):
    user_id = str(update.effective_user.id)

    if update.message.media_group_id:
        await update.message.reply_text("üì∏ –û—Ç–ø—Ä–∞–≤—å—Ç–µ, –ø–æ–∂–∞–ª—É–π—Å—Ç–∞, —Ç–æ–ª—å–∫–æ –æ–¥–Ω–æ —Ñ–æ—Ç–æ –∑–∞ —Ä–∞–∑.")
        return

    photo = update.message.photo[-1]
    if photo.file_size and photo.file_size > 5 * 1024 * 1024:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")
        return

    file = await context.bot.get_file(photo.file_id)
    path = "temp_photo"
    await file.download_to_drive(custom_path=path)

    if imghdr.what(path) not in ("jpeg", "png"):
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ —Ñ–æ—Ç–æ.")
        return

    if not await check_and_increment_limit(user_id):
        await update.message.reply_text("üö´ –õ–∏–º–∏—Ç –Ω–∞ —Å–µ–≥–æ–¥–Ω—è –∏—Å—á–µ—Ä–ø–∞–Ω. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –∑–∞–≤—Ç—Ä–∞.")
        return

    with open(path, "rb") as f:
        image_b64 = base64.b64encode(f.read()).decode()

    async with httpx.AsyncClient() as client:
        resp = await client.post(
            "https://api.plant.id/v2/identify",
            headers={"Api-Key": PLANT_ID_API_KEY},
            json={"images": [image_b64], "organs": ["leaf", "flower"]},
        )

    if resp.status_code != 200:
        logger.error(f"Plant.id API error {resp.status_code}: {resp.text}")
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ.")
        return

    data = resp.json()
    suggestions = data.get("suggestions")
    if not suggestions:
        await update.message.reply_text("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å —Ä–∞—Å–ø–æ–∑–Ω–∞—Ç—å —Ä–∞—Å—Ç–µ–Ω–∏–µ.")
        return

    top = suggestions[0]
    name = top.get("plant_name", "–Ω–µ–∏–∑–≤–µ—Å—Ç–Ω–æ")
    prob = round(top.get("probability", 0) * 100, 2)
    await update.message.reply_text(f"üå± –ü–æ—Ö–æ–∂–µ, —ç—Ç–æ: {name} ({prob}%)")


async def handle_text(update: Update, context: ContextTypes.DEFAULT_TYPE):
    text = update.message.text
    if text == "üìò –ò–Ω—Ñ–æ":
        await update.message.reply_text(INFO_TEXT)
    elif text == "üì¢ –ö–∞–Ω–∞–ª":
        await update.message.reply_text(CHANNEL_TEXT)
    elif text == "‚ÑπÔ∏è –û –ø—Ä–æ–µ–∫—Ç–µ":
        await update.message.reply_text(ABOUT_TEXT)


application.add_handler(CommandHandler("start", start))
application.add_handler(MessageHandler(filters.PHOTO, handle_photo))
application.add_handler(MessageHandler(filters.TEXT & ~filters.COMMAND, handle_text))

if __name__ == "__main__":
    application.run_polling()
