import os
import logging
from fastapi import FastAPI, Request
from telegram import Bot, InlineKeyboardButton, InlineKeyboardMarkup
from service import get_plant_data, format_plant_info

TOKEN = os.environ["BOT_TOKEN"]
bot = Bot(token=TOKEN)
app = FastAPI()
logging.basicConfig(level=logging.INFO)

info_keyboard = InlineKeyboardMarkup([[InlineKeyboardButton("‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ", callback_data="more_info")]])

@app.post("/webhook")
async def telegram_webhook(req: Request):
    data = await req.json()
    logging.info(f"üì© –ü–æ–ª—É—á–µ–Ω –∑–∞–ø—Ä–æ—Å: {data}")

    message = data.get("message")
    callback_query = data.get("callback_query")

    if message:
        chat_id = message["chat"]["id"]
        text = message.get("text", "").strip()
        user_name = message["from"].get("username")
        logging.info(f"üó£ –ü–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å: {chat_id} ({user_name}) ‚Üí {text}")

        plant = get_plant_data(text)
        if plant:
            reply_full = format_plant_info(plant)
            reply_short = reply_full[:900] + "...\n–ù–∞–∂–º–∏—Ç–µ '‚ÑπÔ∏è –ü–æ–¥—Ä–æ–±–Ω–µ–µ' –¥–ª—è –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–µ–π."

            image_path = f"images/{plant['image']}"
            with open(image_path, "rb") as image:
                bot.send_photo(chat_id=chat_id, photo=image, caption=reply_short, parse_mode="HTML", reply_markup=info_keyboard)
        else:
            bot.send_message(chat_id=chat_id, text="‚ùå –†–∞—Å—Ç–µ–Ω–∏–µ –Ω–µ –Ω–∞–π–¥–µ–Ω–æ. –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –¥—Ä—É–≥–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ.")

    elif callback_query:
        chat_id = callback_query["message"]["chat"]["id"]
        message_id = callback_query["message"]["message_id"]
        data = callback_query["data"]
        user_message = callback_query["message"]["caption"].split("\n")[0].replace("üåø ", "")

        if data == "more_info":
            plant = get_plant_data(user_message)
            if plant:
                reply_full = format_plant_info(plant)
                bot.send_message(chat_id=chat_id, text=reply_full, parse_mode="HTML")
            else:
                bot.send_message(chat_id=chat_id, text="‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –ø–æ–¥—Ä–æ–±–Ω–æ—Å—Ç–∏ –ø–æ —ç—Ç–æ–º—É —Ä–∞—Å—Ç–µ–Ω–∏—é.")

    return {"ok": True}

if __name__ == "__main__":
    import uvicorn
    uvicorn.run("main:app", host="0.0.0.0", port=8080)
