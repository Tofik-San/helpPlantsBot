async def generate_care_card(latin_name: str) -> str:
    from loguru import logger

    # 1. –ü—Ä–æ–≤–µ—Ä–∫–∞ –∫—ç—à–∞
    data = await get_card_by_latin_name(latin_name)
    if data:
        return f"<pre>{html.escape(data.get('text', '')[:3000])}</pre>"

    # 2. –ü–æ–∏—Å–∫ —á–∞–Ω–∫–æ–≤ –≤ FAISS
    raw_chunks = get_chunks_by_latin_name(latin_name, top_k=10)
    chunks = [ch for ch in raw_chunks if latin_name.lower() in ch["latin_name"].lower()]
    if not chunks:
        chunks = raw_chunks[:5]  # fallback —Ö–æ—Ç—è –±—ã —á—Ç–æ-—Ç–æ

    logger.debug(f"[generate_care_card] –ß–∞–Ω–∫–æ–≤ –Ω–∞–π–¥–µ–Ω–æ: {len(chunks)}")

    if not chunks:
        return f"‚ùå –ù–µ –Ω–∞–π–¥–µ–Ω–æ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –ø–æ: {latin_name}"

    # 3. –ü—Ä–æ–º—Ç
    prompt_text = f"""–¢—ã ‚Äî —Å–ø–µ—Ü–∏–∞–ª–∏—Å—Ç –ø–æ —É—Ö–æ–¥—É –∑–∞ —Ä–∞—Å—Ç–µ–Ω–∏—è–º–∏.
–°–æ—Å—Ç–∞–≤—å —Å—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä–æ–≤–∞–Ω–Ω—É—é –∫–∞—Ä—Ç–æ—á–∫—É —É—Ö–æ–¥–∞ –Ω–∞ –æ—Å–Ω–æ–≤–µ —Ç–µ–∫—Å—Ç–∞ –Ω–∏–∂–µ.

–ù–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è: {latin_name}

–§—Ä–∞–≥–º–µ–Ω—Ç—ã:
{chr(10).join(f'- {ch["content"]}' for ch in chunks)}

–°–æ–±–µ—Ä–∏ –∫–∞—Ä—Ç–æ—á–∫—É –¥–ª—è Telegram. –ë–µ–∑ –∏—Å—Ç–æ—á–Ω–∏–∫–æ–≤. –ë–µ–∑ –≤–æ–¥—ã. –°—Ç—Ä—É–∫—Ç—É—Ä–∏—Ä—É–π –ø–æ —Å–º—ã—Å–ª—É:
üåø –ù–∞–∑–≤–∞–Ω–∏–µ:
{latin_name}

üß¨ –°–µ–º–µ–π—Å—Ç–≤–æ:
...

üìÇ –ö–∞—Ç–µ–≥–æ—Ä–∏—è:
...

üí° –°–≤–µ—Ç:
...

üíß –ü–æ–ª–∏–≤:
...

üå° –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:
...

üí® –í–ª–∞–∂–Ω–æ—Å—Ç—å:
...

üçΩ –£–¥–æ–±—Ä–µ–Ω–∏—è:
...

üå± –ü–æ—á–≤–∞:
...

‚ôª –ü–µ—Ä–µ—Å–∞–¥–∫–∞:
...

üß¨ –†–∞–∑–º–Ω–æ–∂–µ–Ω–∏–µ:
...

‚≠ê –û—Å–æ–±–µ–Ω–Ω–æ—Å—Ç–∏:
...

–ü—Ä–∞–≤–∏–ª–∞:
- –ò—Å–ø–æ–ª—å–∑—É–π —Ç–æ–ª—å–∫–æ —Ñ–∞–∫—Ç—ã –∏–∑ —Ñ—Ä–∞–≥–º–µ–Ω—Ç–æ–≤. –ù–µ –≤—ã–¥—É–º—ã–≤–∞–π.
- –ï—Å–ª–∏ –±–ª–æ–∫–∞ –Ω–µ—Ç ‚Äî –ø–∏—à–∏: "–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è –æ—Ç—Å—É—Ç—Å—Ç–≤—É–µ—Ç."
- –ù–µ –º–µ–Ω—è–π –ø–æ—Ä—è–¥–æ–∫ –±–ª–æ–∫–æ–≤.
- –≠–º–æ–¥–∑–∏ ‚Äî —Ç–æ–ª—å–∫–æ –≤ –∑–∞–≥–æ–ª–æ–≤–∫–∞—Ö.
- –ë–µ–∑ –≤–≤–æ–¥–Ω—ã—Ö ("—Ä–µ–∫–æ–º–µ–Ω–¥—É–µ—Ç—Å—è", "—Å–ª–µ–¥—É–µ—Ç", "–≤–∞–∂–Ω–æ").
"""

    # 4. GPT-–∑–∞–ø—Ä–æ—Å
    try:
        completion = await openai_client.chat.completions.create(
            model="gpt-4-turbo",
            messages=[{"role": "user", "content": prompt_text}],
            max_tokens=1500,
            temperature=0.3
        )
        gpt_raw = completion.choices[0].message.content.strip()
        gpt_raw = gpt_raw.replace("**", "").replace("__", "")
    except Exception as e:
        logger.error(f"[generate_care_card] GPT –æ—à–∏–±–∫–∞: {e}")
        return f"<b>–û—à–∏–±–∫–∞ –≥–µ–Ω–µ—Ä–∞—Ü–∏–∏:</b>\n\n<pre>{html.escape(str(e))}</pre>"

    # 5. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ
    await save_card({
        "latin_name": latin_name,
        "text": gpt_raw
    })

    return f"<pre>{html.escape(gpt_raw[:3000])}</pre>"
