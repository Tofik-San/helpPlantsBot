from sqlalchemy import create_engine, text
import os

DATABASE_URL = os.environ.get("DATABASE_URL")
engine = create_engine(DATABASE_URL)


def get_plant_data(name=None, category_filter=None, id_filter=None):
    with engine.connect() as connection:
        if id_filter:
            query = text("SELECT * FROM plants WHERE id = :id")
            result = connection.execute(query, {"id": id_filter}).mappings()
        elif category_filter:
            query = text("SELECT * FROM plants WHERE category_type ILIKE :category")
            result = connection.execute(query, {"category": f"%{category_filter}%"}).mappings()
        elif name:
            query = text("SELECT * FROM plants WHERE name ILIKE :name")
            result = connection.execute(query, {"name": f"%{name}%"}).mappings()
        else:
            return None

        return [format_plant(row) for row in result]


def list_varieties_by_category(category: str):
    with engine.connect() as connection:
        query = text("SELECT * FROM plants WHERE category_type ILIKE :category")
        result = connection.execute(query, {"category": f"%{category}%"}).mappings()
        return [format_plant(row) for row in result]


def format_plant(row):
    return {
        "id": row["id"],
        "name": row["name"],
        "latin_name": row["latin_name"],
        "short_description": row["short_description"],
        "category_type": row["category_type"],
        "light": row["light"],
        "watering": row["watering"],
        "temperature": row["temperature"],
        "soil": row["soil"],
        "fertilizer": row["fertilizer"],
        "care_tip": row["care_tip"],
        "insights": row["insights"],
    }


def format_plant_info_base(plant):
    return (
        f"<b>{plant.get('name')}</b>\n"
        f"{plant.get('short_description')}"
    )


def format_plant_info_extended(plant):
    return (
        f"üåø <b>–¢–∏–ø:</b> {plant.get('category_type')}\n"
        f"‚òÄÔ∏è <b>–°–≤–µ—Ç:</b> {plant.get('light')}\n"
        f"üíß <b>–ü–æ–ª–∏–≤:</b> {plant.get('watering')}\n"
        f"üå°Ô∏è <b>–¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞:</b> {plant.get('temperature')}\n"
        f"ü™¥ <b>–ü–æ—á–≤–∞:</b> {plant.get('soil')}\n"
        f"üåª <b>–£–¥–æ–±—Ä–µ–Ω–∏—è:</b> {plant.get('fertilizer')}\n"
        f"‚úÇÔ∏è <b>–£—Ö–æ–¥:</b> {plant.get('care_tip')}"
    )


def format_plant_insights(plant):
    return plant.get("insights", "").strip()


def get_bot_info():
    return (
        "üåø –≠—Ç–æ—Ç –±–æ—Ç –ø–æ–º–æ–∂–µ—Ç —Ç–µ–±–µ —É–∑–Ω–∞—Ç—å –≤—Å—ë –æ —Ä–∞—Å—Ç–µ–Ω–∏—è—Ö.\n\n"
        "üìå –û—Ç–ø—Ä–∞–≤—å –Ω–∞–∑–≤–∞–Ω–∏–µ —Ä–∞—Å—Ç–µ–Ω–∏—è –∏–ª–∏ –≤—ã–±–µ—Ä–∏ –∫–∞—Ç–µ–≥–æ—Ä–∏—é, —á—Ç–æ–±—ã –ø–æ–ª—É—á–∏—Ç—å –∫–∞—Ä—Ç–æ—á–∫—É —Å —É—Ö–æ–¥–æ–º, —Ñ–æ—Ç–æ –∏ —Å–æ–≤–µ—Ç–∞–º–∏."
    )
